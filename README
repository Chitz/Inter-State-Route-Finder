Inter-state Route Finder

Dataset of North American (though mostly U.S.) major roads.

city-gps.txt contains one line per city, with three fields per line, 
delimited by spaces. The first field is the city, followed by the latitude,
followed by the longitude.

road-segments.txt has one line per road segment connecting two cities.
The space delimited fields are:

- first city
- second city
- length (in miles)
- speed limit (in miles per hour)
- name of highway


Assumption that all roads in road-segments.txt are bidirectional, i.e. none are one-way roads, so that it's possible to travel from the first city to the second city at the same distance at speed as from the second city to the first city.

Command line: python route.py [start-city] [end-city] [routing-option] [routing-algorithm]
where:• start-city and end-city are the cities we need a route between. • routing-option is one of:– segments finds a route with the fewest number of “turns” (i.e. edges of the graph) 2
– distance finds a route with the shortest total distance– time finds the fastest route, for a car that always travels at the speed limit• routing-algorithm is one of:– bfs uses breadth-first search– dfs uses depth-first search– astar uses A* search, with a suitable heuristic function
- uniformcost uses uniform cost search